#!/bin/bash

: ${K_LOGLEVEL:=2}

LOG() {
	local level=$1
	shift

	if [[ $level -ge $K_LOGLEVEL ]]; then
		echo "$*" >&2
	fi
}

find_kubeconfig() {
(
	local _kubeconfigs=()

	while [[ $PWD != / ]]; do
		LOG 0 "looking for kubeconfig in $PWD"

		if [[ -f .kubeconfig ]]; then
			echo "$PWD/.kubeconfig"
			return 0
		fi

		cd ..
	done

	return 1
)
}


if _kubeconfig=$(find_kubeconfig); then
	LOG 1 "found .kubeconfig $_kubeconfig"
	export KUBECONFIG=$_kubeconfig

	# This is mostly a hack to work around the fact that running
	# `oc login` removes any proxy configuration from .kubeconfig,
	# so we need to specify proxies via environment variables
	# instead.
	if [[ -f ${_kubeconfig}.env ]]; then
		LOG 1 "found .kuebconfig.env ${_kubeconfig}.env"
		set -a
		. ${_kubeconfig}.env
		set +a
	fi
else
	LOG 1 "did not find .kubeconfig"
fi

if [[ $K_USE_OC ]]; then
	exec oc "$@"
elif [[ $1 == "oc" ]]; then
	exec "$@"
else
	exec kubectl "$@"
fi
